// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+alt+v",
    "command": "toggleVim"
  },
  {
    "key": "shift+alt+j",
    "command": "editor.action.moveLinesDownAction"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+r cmd+n",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+h",
    "when": "(vim.active && vim.mode == 'Normal') || (!vim.active)",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+l",
    "when": "(vim.active && vim.mode == 'Normal') || (!vim.active)",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "-workbench.action.chat.newChat",
    "when": "hasChatProvider && inChat"
  },
  {
    "key": "ctrl+l",
    "command": "-extension.vim_navigateCtrlL",
    "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
  },
  {
    "key": "cmd+k cmd+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k alt+cmd+down",
    "command": "-editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+k alt+cmd+up",
    "command": "-editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+k alt+cmd+c",
    "command": "-workbench.action.addComment"
  },
  {
    "key": "cmd+k cmd+,",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/hnimtadd/Library/Application%20Support/Code/User/keybindings.json'"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+space w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+space q",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+k w",
    "command": "-workbench.action.closeGroup"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+space \\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+space -",
    "command": "workbench.action.splitEditorDown"
  },
  
  {
    "key": "shift+cmd+\\",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "; f",
    "command": "workbench.action.quickOpen",
    "when": "vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "; z",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
  },
  {
    "key": "ctrl+space z",
    "command": "workbench.action.toggleZenMode",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && (editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups)"
  },
  {
    "key": "; e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus && vim.active && !inDebugRepl && activeEditorGroupIndex==1 && sideBarVisible"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLastEditorGroup",
    "when": "vim.active && !inDebugRepl && sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus && vim.active && !inDebugRepl && activeEditorGroupLast && sideBarVisible"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "vim.active && !inDebugRepl && sideBarFocus"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },
  {
    "key": "] d",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },
  {
    "key": "[ d",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },
  {
    "key": "; d",
    "command": "errorLens.toggle",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  }
]
